package com.example.api.Controllers;import com.example.api.DTO.CommentDTO;import com.example.api.Response.ApiResponse;import com.example.api.ServicesImpl.CommentServiceImplementations;import lombok.RequiredArgsConstructor;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.web.bind.annotation.*;@RestController@RequiredArgsConstructor@RequestMapping("api/v1/comment")public class Comment_Controller {    private final CommentServiceImplementations commentService;    @PostMapping("/add/{postId}")    public ResponseEntity<ApiResponse> createOpen(@PathVariable Long postId,                                                  @RequestBody CommentDTO commentDTO                                                  ){        UserDetails userDetails = (UserDetails) SecurityContextHolder.getContext().getAuthentication().getPrincipal();        CommentDTO comment = commentService.commentCreated(commentDTO,postId,userDetails.getUsername());        return  ResponseEntity.status(HttpStatus.CREATED).body(                ApiResponse.builder().                        data(new Object())                        .message((comment!=null)?"Success" : "Error").                        status((comment!=null)?HttpStatus.CREATED:HttpStatus.EXPECTATION_FAILED).                build()        );    }}