package com.example.api.ServicesImpl;import com.example.api.DTO.CommentDTO;import com.example.api.Entity.Comments;import com.example.api.Entity.Post;import com.example.api.Entity.User;import com.example.api.Repository.CommentsRepository;import com.example.api.Repository.PostRepositories;import com.example.api.Repository.UserRepositories;import com.example.api.Services.CommentService;import lombok.RequiredArgsConstructor;import org.modelmapper.ModelMapper;import org.springframework.stereotype.Service;@Service@RequiredArgsConstructorpublic class CommentServiceImplementations implements CommentService {    private final CommentsRepository commentRepository;    private final UserRepositories userRepositories;    private final PostRepositories postRepositories;    private final ModelMapper modelMapper;    @Override    public CommentDTO commentCreated(CommentDTO commentDTO, Long id, String email) {        User user = userRepositories.findUserByEmail(email).orElse(null);        Post post = postRepositories.findById(id).orElse(null);        Comments comments = new Comments();                comments.setUsers(user);                comments.setPost(post);                comments.setComments(commentDTO.getComments());        CommentDTO savedCommentDTO = modelMapper.map(commentRepository.save(comments), CommentDTO.class);        return savedCommentDTO;    }    @Override    public CommentDTO deleteComment(Long id) {        return null;    }}